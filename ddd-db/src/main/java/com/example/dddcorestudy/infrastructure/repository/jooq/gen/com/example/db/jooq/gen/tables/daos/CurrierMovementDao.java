/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen.tables.daos;


import com.example.db.jooq.gen.tables.JCurrierMovement;
import com.example.db.jooq.gen.tables.pojos.CurrierMovementVo;
import com.example.db.jooq.gen.tables.records.CurrierMovementRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrierMovementDao extends DAOImpl<CurrierMovementRecord, CurrierMovementVo, Integer> {

    /**
     * Create a new CurrierMovementDao without any configuration
     */
    public CurrierMovementDao() {
        super(JCurrierMovement.CURRIER_MOVEMENT, CurrierMovementVo.class);
    }

    /**
     * Create a new CurrierMovementDao with an attached configuration
     */
    public CurrierMovementDao(Configuration configuration) {
        super(JCurrierMovement.CURRIER_MOVEMENT, CurrierMovementVo.class, configuration);
    }

    @Override
    public Integer getId(CurrierMovementVo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CurrierMovementVo> fetchRangeOfJId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JCurrierMovement.CURRIER_MOVEMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<CurrierMovementVo> fetchByJId(Integer... values) {
        return fetch(JCurrierMovement.CURRIER_MOVEMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public CurrierMovementVo fetchOneByJId(Integer value) {
        return fetchOne(JCurrierMovement.CURRIER_MOVEMENT.ID, value);
    }

    /**
     * Fetch records that have <code>arrival_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CurrierMovementVo> fetchRangeOfJArrivalTime(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(JCurrierMovement.CURRIER_MOVEMENT.ARRIVAL_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>arrival_time IN (values)</code>
     */
    public List<CurrierMovementVo> fetchByJArrivalTime(Timestamp... values) {
        return fetch(JCurrierMovement.CURRIER_MOVEMENT.ARRIVAL_TIME, values);
    }

    /**
     * Fetch records that have <code>departure_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CurrierMovementVo> fetchRangeOfJDepartureTime(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(JCurrierMovement.CURRIER_MOVEMENT.DEPARTURE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>departure_time IN (values)</code>
     */
    public List<CurrierMovementVo> fetchByJDepartureTime(Timestamp... values) {
        return fetch(JCurrierMovement.CURRIER_MOVEMENT.DEPARTURE_TIME, values);
    }

    /**
     * Fetch records that have <code>arrival_location_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CurrierMovementVo> fetchRangeOfJArrivalLocationId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JCurrierMovement.CURRIER_MOVEMENT.ARRIVAL_LOCATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>arrival_location_id IN (values)</code>
     */
    public List<CurrierMovementVo> fetchByJArrivalLocationId(Integer... values) {
        return fetch(JCurrierMovement.CURRIER_MOVEMENT.ARRIVAL_LOCATION_ID, values);
    }

    /**
     * Fetch records that have <code>departure_location_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CurrierMovementVo> fetchRangeOfJDepartureLocationId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JCurrierMovement.CURRIER_MOVEMENT.DEPARTURE_LOCATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>departure_location_id IN (values)</code>
     */
    public List<CurrierMovementVo> fetchByJDepartureLocationId(Integer... values) {
        return fetch(JCurrierMovement.CURRIER_MOVEMENT.DEPARTURE_LOCATION_ID, values);
    }
}
