/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen;


import com.example.db.jooq.gen.tables.JCargo;
import com.example.db.jooq.gen.tables.JCurrierMovement;
import com.example.db.jooq.gen.tables.JHandlingEvent;
import com.example.db.jooq.gen.tables.JItinerary;
import com.example.db.jooq.gen.tables.JLeg;
import com.example.db.jooq.gen.tables.JLocation;
import com.example.db.jooq.gen.tables.JSchedule;
import com.example.db.jooq.gen.tables.JVayage;
import com.example.db.jooq.gen.tables.records.CargoRecord;
import com.example.db.jooq.gen.tables.records.CurrierMovementRecord;
import com.example.db.jooq.gen.tables.records.HandlingEventRecord;
import com.example.db.jooq.gen.tables.records.ItineraryRecord;
import com.example.db.jooq.gen.tables.records.LegRecord;
import com.example.db.jooq.gen.tables.records.LocationRecord;
import com.example.db.jooq.gen.tables.records.ScheduleRecord;
import com.example.db.jooq.gen.tables.records.VayageRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>ddd-sample</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CargoRecord, Integer> IDENTITY_CARGO = Identities0.IDENTITY_CARGO;
    public static final Identity<CurrierMovementRecord, Integer> IDENTITY_CURRIER_MOVEMENT = Identities0.IDENTITY_CURRIER_MOVEMENT;
    public static final Identity<HandlingEventRecord, Integer> IDENTITY_HANDLING_EVENT = Identities0.IDENTITY_HANDLING_EVENT;
    public static final Identity<ItineraryRecord, Integer> IDENTITY_ITINERARY = Identities0.IDENTITY_ITINERARY;
    public static final Identity<LegRecord, Integer> IDENTITY_LEG = Identities0.IDENTITY_LEG;
    public static final Identity<LocationRecord, Integer> IDENTITY_LOCATION = Identities0.IDENTITY_LOCATION;
    public static final Identity<ScheduleRecord, Integer> IDENTITY_SCHEDULE = Identities0.IDENTITY_SCHEDULE;
    public static final Identity<VayageRecord, Integer> IDENTITY_VAYAGE = Identities0.IDENTITY_VAYAGE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CargoRecord> KEY_CARGO_PRIMARY = UniqueKeys0.KEY_CARGO_PRIMARY;
    public static final UniqueKey<CargoRecord> KEY_CARGO_CARGO_IDX_1 = UniqueKeys0.KEY_CARGO_CARGO_IDX_1;
    public static final UniqueKey<CurrierMovementRecord> KEY_CURRIER_MOVEMENT_PRIMARY = UniqueKeys0.KEY_CURRIER_MOVEMENT_PRIMARY;
    public static final UniqueKey<HandlingEventRecord> KEY_HANDLING_EVENT_PRIMARY = UniqueKeys0.KEY_HANDLING_EVENT_PRIMARY;
    public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_PRIMARY = UniqueKeys0.KEY_ITINERARY_PRIMARY;
    public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_ITINERARY_IDX_1 = UniqueKeys0.KEY_ITINERARY_ITINERARY_IDX_1;
    public static final UniqueKey<LegRecord> KEY_LEG_PRIMARY = UniqueKeys0.KEY_LEG_PRIMARY;
    public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = UniqueKeys0.KEY_LOCATION_PRIMARY;
    public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_PRIMARY = UniqueKeys0.KEY_SCHEDULE_PRIMARY;
    public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_SCHEDULE_IDX_1 = UniqueKeys0.KEY_SCHEDULE_SCHEDULE_IDX_1;
    public static final UniqueKey<VayageRecord> KEY_VAYAGE_PRIMARY = UniqueKeys0.KEY_VAYAGE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CargoRecord, Integer> IDENTITY_CARGO = Internal.createIdentity(JCargo.CARGO, JCargo.CARGO.ID);
        public static Identity<CurrierMovementRecord, Integer> IDENTITY_CURRIER_MOVEMENT = Internal.createIdentity(JCurrierMovement.CURRIER_MOVEMENT, JCurrierMovement.CURRIER_MOVEMENT.ID);
        public static Identity<HandlingEventRecord, Integer> IDENTITY_HANDLING_EVENT = Internal.createIdentity(JHandlingEvent.HANDLING_EVENT, JHandlingEvent.HANDLING_EVENT.ID);
        public static Identity<ItineraryRecord, Integer> IDENTITY_ITINERARY = Internal.createIdentity(JItinerary.ITINERARY, JItinerary.ITINERARY.ID);
        public static Identity<LegRecord, Integer> IDENTITY_LEG = Internal.createIdentity(JLeg.LEG, JLeg.LEG.ID);
        public static Identity<LocationRecord, Integer> IDENTITY_LOCATION = Internal.createIdentity(JLocation.LOCATION, JLocation.LOCATION.ID);
        public static Identity<ScheduleRecord, Integer> IDENTITY_SCHEDULE = Internal.createIdentity(JSchedule.SCHEDULE, JSchedule.SCHEDULE.ID);
        public static Identity<VayageRecord, Integer> IDENTITY_VAYAGE = Internal.createIdentity(JVayage.VAYAGE, JVayage.VAYAGE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CargoRecord> KEY_CARGO_PRIMARY = Internal.createUniqueKey(JCargo.CARGO, "KEY_cargo_PRIMARY", JCargo.CARGO.ID);
        public static final UniqueKey<CargoRecord> KEY_CARGO_CARGO_IDX_1 = Internal.createUniqueKey(JCargo.CARGO, "KEY_cargo_cargo_idx_1", JCargo.CARGO.TRACKING_ID);
        public static final UniqueKey<CurrierMovementRecord> KEY_CURRIER_MOVEMENT_PRIMARY = Internal.createUniqueKey(JCurrierMovement.CURRIER_MOVEMENT, "KEY_currier_movement_PRIMARY", JCurrierMovement.CURRIER_MOVEMENT.ID);
        public static final UniqueKey<HandlingEventRecord> KEY_HANDLING_EVENT_PRIMARY = Internal.createUniqueKey(JHandlingEvent.HANDLING_EVENT, "KEY_handling_event_PRIMARY", JHandlingEvent.HANDLING_EVENT.ID);
        public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_PRIMARY = Internal.createUniqueKey(JItinerary.ITINERARY, "KEY_itinerary_PRIMARY", JItinerary.ITINERARY.ID);
        public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_ITINERARY_IDX_1 = Internal.createUniqueKey(JItinerary.ITINERARY, "KEY_itinerary_itinerary_idx_1", JItinerary.ITINERARY.CARGO_ID, JItinerary.ITINERARY.LEG_ID);
        public static final UniqueKey<LegRecord> KEY_LEG_PRIMARY = Internal.createUniqueKey(JLeg.LEG, "KEY_leg_PRIMARY", JLeg.LEG.ID);
        public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = Internal.createUniqueKey(JLocation.LOCATION, "KEY_location_PRIMARY", JLocation.LOCATION.ID);
        public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_PRIMARY = Internal.createUniqueKey(JSchedule.SCHEDULE, "KEY_schedule_PRIMARY", JSchedule.SCHEDULE.ID);
        public static final UniqueKey<ScheduleRecord> KEY_SCHEDULE_SCHEDULE_IDX_1 = Internal.createUniqueKey(JSchedule.SCHEDULE, "KEY_schedule_schedule_idx_1", JSchedule.SCHEDULE.VOYAGE_ID, JSchedule.SCHEDULE.CURRIER_MOVEMENT_ID);
        public static final UniqueKey<VayageRecord> KEY_VAYAGE_PRIMARY = Internal.createUniqueKey(JVayage.VAYAGE, "KEY_vayage_PRIMARY", JVayage.VAYAGE.ID);
    }
}
