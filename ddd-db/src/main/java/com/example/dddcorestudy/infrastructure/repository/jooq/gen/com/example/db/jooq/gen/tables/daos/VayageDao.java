/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen.tables.daos;


import com.example.db.jooq.gen.tables.JVayage;
import com.example.db.jooq.gen.tables.pojos.VayageVo;
import com.example.db.jooq.gen.tables.records.VayageRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VayageDao extends DAOImpl<VayageRecord, VayageVo, Integer> {

    /**
     * Create a new VayageDao without any configuration
     */
    public VayageDao() {
        super(JVayage.VAYAGE, VayageVo.class);
    }

    /**
     * Create a new VayageDao with an attached configuration
     */
    public VayageDao(Configuration configuration) {
        super(JVayage.VAYAGE, VayageVo.class, configuration);
    }

    @Override
    public Integer getId(VayageVo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VayageVo> fetchRangeOfJId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JVayage.VAYAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<VayageVo> fetchByJId(Integer... values) {
        return fetch(JVayage.VAYAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public VayageVo fetchOneByJId(Integer value) {
        return fetchOne(JVayage.VAYAGE.ID, value);
    }

    /**
     * Fetch records that have <code>voyage_number BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VayageVo> fetchRangeOfJVoyageNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(JVayage.VAYAGE.VOYAGE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>voyage_number IN (values)</code>
     */
    public List<VayageVo> fetchByJVoyageNumber(String... values) {
        return fetch(JVayage.VAYAGE.VOYAGE_NUMBER, values);
    }
}
