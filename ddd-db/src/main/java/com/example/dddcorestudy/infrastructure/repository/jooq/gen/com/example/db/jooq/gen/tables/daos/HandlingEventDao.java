/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen.tables.daos;


import com.example.db.jooq.gen.tables.JHandlingEvent;
import com.example.db.jooq.gen.tables.pojos.HandlingEventVo;
import com.example.db.jooq.gen.tables.records.HandlingEventRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HandlingEventDao extends DAOImpl<HandlingEventRecord, HandlingEventVo, Integer> {

    /**
     * Create a new HandlingEventDao without any configuration
     */
    public HandlingEventDao() {
        super(JHandlingEvent.HANDLING_EVENT, HandlingEventVo.class);
    }

    /**
     * Create a new HandlingEventDao with an attached configuration
     */
    public HandlingEventDao(Configuration configuration) {
        super(JHandlingEvent.HANDLING_EVENT, HandlingEventVo.class, configuration);
    }

    @Override
    public Integer getId(HandlingEventVo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<HandlingEventVo> fetchRangeOfJId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JHandlingEvent.HANDLING_EVENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<HandlingEventVo> fetchByJId(Integer... values) {
        return fetch(JHandlingEvent.HANDLING_EVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public HandlingEventVo fetchOneByJId(Integer value) {
        return fetchOne(JHandlingEvent.HANDLING_EVENT.ID, value);
    }

    /**
     * Fetch records that have <code>voyage_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<HandlingEventVo> fetchRangeOfJVoyageId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JHandlingEvent.HANDLING_EVENT.VOYAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>voyage_id IN (values)</code>
     */
    public List<HandlingEventVo> fetchByJVoyageId(Integer... values) {
        return fetch(JHandlingEvent.HANDLING_EVENT.VOYAGE_ID, values);
    }

    /**
     * Fetch records that have <code>location_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<HandlingEventVo> fetchRangeOfJLocationId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JHandlingEvent.HANDLING_EVENT.LOCATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_id IN (values)</code>
     */
    public List<HandlingEventVo> fetchByJLocationId(Integer... values) {
        return fetch(JHandlingEvent.HANDLING_EVENT.LOCATION_ID, values);
    }

    /**
     * Fetch records that have <code>cargo_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<HandlingEventVo> fetchRangeOfJCargoId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JHandlingEvent.HANDLING_EVENT.CARGO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cargo_id IN (values)</code>
     */
    public List<HandlingEventVo> fetchByJCargoId(Integer... values) {
        return fetch(JHandlingEvent.HANDLING_EVENT.CARGO_ID, values);
    }

    /**
     * Fetch records that have <code>completion_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<HandlingEventVo> fetchRangeOfJCompletionTime(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(JHandlingEvent.HANDLING_EVENT.COMPLETION_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>completion_time IN (values)</code>
     */
    public List<HandlingEventVo> fetchByJCompletionTime(Timestamp... values) {
        return fetch(JHandlingEvent.HANDLING_EVENT.COMPLETION_TIME, values);
    }

    /**
     * Fetch records that have <code>registration_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<HandlingEventVo> fetchRangeOfJRegistrationTime(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JHandlingEvent.HANDLING_EVENT.REGISTRATION_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>registration_time IN (values)</code>
     */
    public List<HandlingEventVo> fetchByJRegistrationTime(Integer... values) {
        return fetch(JHandlingEvent.HANDLING_EVENT.REGISTRATION_TIME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<HandlingEventVo> fetchRangeOfJType(String lowerInclusive, String upperInclusive) {
        return fetchRange(JHandlingEvent.HANDLING_EVENT.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<HandlingEventVo> fetchByJType(String... values) {
        return fetch(JHandlingEvent.HANDLING_EVENT.TYPE, values);
    }
}
