/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen.tables.daos;


import com.example.db.jooq.gen.tables.JVoyage;
import com.example.db.jooq.gen.tables.pojos.VoyageVo;
import com.example.db.jooq.gen.tables.records.VoyageRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VoyageDao extends DAOImpl<VoyageRecord, VoyageVo, Integer> {

    /**
     * Create a new VoyageDao without any configuration
     */
    public VoyageDao() {
        super(JVoyage.VOYAGE, VoyageVo.class);
    }

    /**
     * Create a new VoyageDao with an attached configuration
     */
    public VoyageDao(Configuration configuration) {
        super(JVoyage.VOYAGE, VoyageVo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(VoyageVo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<VoyageVo> fetchByJId(Integer... values) {
        return fetch(JVoyage.VOYAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public VoyageVo fetchOneByJId(Integer value) {
        return fetchOne(JVoyage.VOYAGE.ID, value);
    }

    /**
     * Fetch records that have <code>voyage_number IN (values)</code>
     */
    public List<VoyageVo> fetchByJVoyageNumber(String... values) {
        return fetch(JVoyage.VOYAGE.VOYAGE_NUMBER, values);
    }
}
