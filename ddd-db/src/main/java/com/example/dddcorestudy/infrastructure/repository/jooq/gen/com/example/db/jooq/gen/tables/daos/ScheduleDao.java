/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen.tables.daos;


import com.example.db.jooq.gen.tables.JSchedule;
import com.example.db.jooq.gen.tables.pojos.ScheduleVo;
import com.example.db.jooq.gen.tables.records.ScheduleRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleDao extends DAOImpl<ScheduleRecord, ScheduleVo, Integer> {

    /**
     * Create a new ScheduleDao without any configuration
     */
    public ScheduleDao() {
        super(JSchedule.SCHEDULE, ScheduleVo.class);
    }

    /**
     * Create a new ScheduleDao with an attached configuration
     */
    public ScheduleDao(Configuration configuration) {
        super(JSchedule.SCHEDULE, ScheduleVo.class, configuration);
    }

    @Override
    public Integer getId(ScheduleVo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ScheduleVo> fetchRangeOfJId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JSchedule.SCHEDULE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ScheduleVo> fetchByJId(Integer... values) {
        return fetch(JSchedule.SCHEDULE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ScheduleVo fetchOneByJId(Integer value) {
        return fetchOne(JSchedule.SCHEDULE.ID, value);
    }

    /**
     * Fetch records that have <code>voyage_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ScheduleVo> fetchRangeOfJVoyageId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JSchedule.SCHEDULE.VOYAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>voyage_id IN (values)</code>
     */
    public List<ScheduleVo> fetchByJVoyageId(Integer... values) {
        return fetch(JSchedule.SCHEDULE.VOYAGE_ID, values);
    }

    /**
     * Fetch records that have <code>currier_movement_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ScheduleVo> fetchRangeOfJCurrierMovementId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JSchedule.SCHEDULE.CURRIER_MOVEMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>currier_movement_id IN (values)</code>
     */
    public List<ScheduleVo> fetchByJCurrierMovementId(Integer... values) {
        return fetch(JSchedule.SCHEDULE.CURRIER_MOVEMENT_ID, values);
    }
}
