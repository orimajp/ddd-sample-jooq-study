/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen.tables.records;


import com.example.db.jooq.gen.tables.JItinerary;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItineraryRecord extends UpdatableRecordImpl<ItineraryRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 655565955;

    /**
     * Setter for <code>ddd-sample.itinerary.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ddd-sample.itinerary.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ddd-sample.itinerary.cargo_id</code>.
     */
    public void setCargoId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ddd-sample.itinerary.cargo_id</code>.
     */
    public Integer getCargoId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ddd-sample.itinerary.leg_id</code>.
     */
    public void setLegId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ddd-sample.itinerary.leg_id</code>.
     */
    public Integer getLegId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return JItinerary.ITINERARY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return JItinerary.ITINERARY.CARGO_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return JItinerary.ITINERARY.LEG_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCargoId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getLegId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCargoId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getLegId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItineraryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItineraryRecord value2(Integer value) {
        setCargoId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItineraryRecord value3(Integer value) {
        setLegId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItineraryRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItineraryRecord
     */
    public ItineraryRecord() {
        super(JItinerary.ITINERARY);
    }

    /**
     * Create a detached, initialised ItineraryRecord
     */
    public ItineraryRecord(Integer id, Integer cargoId, Integer legId) {
        super(JItinerary.ITINERARY);

        set(0, id);
        set(1, cargoId);
        set(2, legId);
    }
}
