/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen.tables;


import com.example.db.jooq.gen.Indexes;
import com.example.db.jooq.gen.JDddSample;
import com.example.db.jooq.gen.Keys;
import com.example.db.jooq.gen.tables.records.VoyageToCurrierMovementRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JVoyageToCurrierMovement extends TableImpl<VoyageToCurrierMovementRecord> {

    private static final long serialVersionUID = 1371415636;

    /**
     * The reference instance of <code>ddd-sample.voyage_to_currier_movement</code>
     */
    public static final JVoyageToCurrierMovement VOYAGE_TO_CURRIER_MOVEMENT = new JVoyageToCurrierMovement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VoyageToCurrierMovementRecord> getRecordType() {
        return VoyageToCurrierMovementRecord.class;
    }

    /**
     * The column <code>ddd-sample.voyage_to_currier_movement.id</code>.
     */
    public final TableField<VoyageToCurrierMovementRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>ddd-sample.voyage_to_currier_movement.voyage_id</code>.
     */
    public final TableField<VoyageToCurrierMovementRecord, Integer> VOYAGE_ID = createField("voyage_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ddd-sample.voyage_to_currier_movement.currier_movement_id</code>.
     */
    public final TableField<VoyageToCurrierMovementRecord, Integer> CURRIER_MOVEMENT_ID = createField("currier_movement_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>ddd-sample.voyage_to_currier_movement</code> table reference
     */
    public JVoyageToCurrierMovement() {
        this(DSL.name("voyage_to_currier_movement"), null);
    }

    /**
     * Create an aliased <code>ddd-sample.voyage_to_currier_movement</code> table reference
     */
    public JVoyageToCurrierMovement(String alias) {
        this(DSL.name(alias), VOYAGE_TO_CURRIER_MOVEMENT);
    }

    /**
     * Create an aliased <code>ddd-sample.voyage_to_currier_movement</code> table reference
     */
    public JVoyageToCurrierMovement(Name alias) {
        this(alias, VOYAGE_TO_CURRIER_MOVEMENT);
    }

    private JVoyageToCurrierMovement(Name alias, Table<VoyageToCurrierMovementRecord> aliased) {
        this(alias, aliased, null);
    }

    private JVoyageToCurrierMovement(Name alias, Table<VoyageToCurrierMovementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JVoyageToCurrierMovement(Table<O> child, ForeignKey<O, VoyageToCurrierMovementRecord> key) {
        super(child, key, VOYAGE_TO_CURRIER_MOVEMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JDddSample.DDD_SAMPLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VOYAGE_TO_CURRIER_MOVEMENT_PRIMARY, Indexes.VOYAGE_TO_CURRIER_MOVEMENT_SCHEDULE_IDX_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VoyageToCurrierMovementRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VOYAGE_TO_CURRIER_MOVEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VoyageToCurrierMovementRecord> getPrimaryKey() {
        return Keys.KEY_VOYAGE_TO_CURRIER_MOVEMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VoyageToCurrierMovementRecord>> getKeys() {
        return Arrays.<UniqueKey<VoyageToCurrierMovementRecord>>asList(Keys.KEY_VOYAGE_TO_CURRIER_MOVEMENT_PRIMARY, Keys.KEY_VOYAGE_TO_CURRIER_MOVEMENT_SCHEDULE_IDX_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JVoyageToCurrierMovement as(String alias) {
        return new JVoyageToCurrierMovement(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JVoyageToCurrierMovement as(Name alias) {
        return new JVoyageToCurrierMovement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JVoyageToCurrierMovement rename(String name) {
        return new JVoyageToCurrierMovement(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JVoyageToCurrierMovement rename(Name name) {
        return new JVoyageToCurrierMovement(name, null);
    }
}
