/*
 * This file is generated by jOOQ.
 */
package com.example.db.jooq.gen;


import com.example.db.jooq.gen.tables.JCargo;
import com.example.db.jooq.gen.tables.JCargoToLeg;
import com.example.db.jooq.gen.tables.JCurrierMovement;
import com.example.db.jooq.gen.tables.JHandlingEvent;
import com.example.db.jooq.gen.tables.JItinerary;
import com.example.db.jooq.gen.tables.JLeg;
import com.example.db.jooq.gen.tables.JLocation;
import com.example.db.jooq.gen.tables.JVoyage;
import com.example.db.jooq.gen.tables.JVoyageToCurrierMovement;
import com.example.db.jooq.gen.tables.records.CargoRecord;
import com.example.db.jooq.gen.tables.records.CargoToLegRecord;
import com.example.db.jooq.gen.tables.records.CurrierMovementRecord;
import com.example.db.jooq.gen.tables.records.HandlingEventRecord;
import com.example.db.jooq.gen.tables.records.ItineraryRecord;
import com.example.db.jooq.gen.tables.records.LegRecord;
import com.example.db.jooq.gen.tables.records.LocationRecord;
import com.example.db.jooq.gen.tables.records.VoyageRecord;
import com.example.db.jooq.gen.tables.records.VoyageToCurrierMovementRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>ddd-sample</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CargoRecord, Integer> IDENTITY_CARGO = Identities0.IDENTITY_CARGO;
    public static final Identity<CargoToLegRecord, Integer> IDENTITY_CARGO_TO_LEG = Identities0.IDENTITY_CARGO_TO_LEG;
    public static final Identity<CurrierMovementRecord, Integer> IDENTITY_CURRIER_MOVEMENT = Identities0.IDENTITY_CURRIER_MOVEMENT;
    public static final Identity<HandlingEventRecord, Integer> IDENTITY_HANDLING_EVENT = Identities0.IDENTITY_HANDLING_EVENT;
    public static final Identity<ItineraryRecord, Integer> IDENTITY_ITINERARY = Identities0.IDENTITY_ITINERARY;
    public static final Identity<LegRecord, Integer> IDENTITY_LEG = Identities0.IDENTITY_LEG;
    public static final Identity<LocationRecord, Integer> IDENTITY_LOCATION = Identities0.IDENTITY_LOCATION;
    public static final Identity<VoyageRecord, Integer> IDENTITY_VOYAGE = Identities0.IDENTITY_VOYAGE;
    public static final Identity<VoyageToCurrierMovementRecord, Integer> IDENTITY_VOYAGE_TO_CURRIER_MOVEMENT = Identities0.IDENTITY_VOYAGE_TO_CURRIER_MOVEMENT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CargoRecord> KEY_CARGO_PRIMARY = UniqueKeys0.KEY_CARGO_PRIMARY;
    public static final UniqueKey<CargoRecord> KEY_CARGO_CARGO_IDX_1 = UniqueKeys0.KEY_CARGO_CARGO_IDX_1;
    public static final UniqueKey<CargoToLegRecord> KEY_CARGO_TO_LEG_PRIMARY = UniqueKeys0.KEY_CARGO_TO_LEG_PRIMARY;
    public static final UniqueKey<CargoToLegRecord> KEY_CARGO_TO_LEG_CARGGO_TO_LEG_INDEX_1 = UniqueKeys0.KEY_CARGO_TO_LEG_CARGGO_TO_LEG_INDEX_1;
    public static final UniqueKey<CurrierMovementRecord> KEY_CURRIER_MOVEMENT_PRIMARY = UniqueKeys0.KEY_CURRIER_MOVEMENT_PRIMARY;
    public static final UniqueKey<HandlingEventRecord> KEY_HANDLING_EVENT_PRIMARY = UniqueKeys0.KEY_HANDLING_EVENT_PRIMARY;
    public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_PRIMARY = UniqueKeys0.KEY_ITINERARY_PRIMARY;
    public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_ITINERARY_IDX_1 = UniqueKeys0.KEY_ITINERARY_ITINERARY_IDX_1;
    public static final UniqueKey<LegRecord> KEY_LEG_PRIMARY = UniqueKeys0.KEY_LEG_PRIMARY;
    public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = UniqueKeys0.KEY_LOCATION_PRIMARY;
    public static final UniqueKey<VoyageRecord> KEY_VOYAGE_PRIMARY = UniqueKeys0.KEY_VOYAGE_PRIMARY;
    public static final UniqueKey<VoyageToCurrierMovementRecord> KEY_VOYAGE_TO_CURRIER_MOVEMENT_PRIMARY = UniqueKeys0.KEY_VOYAGE_TO_CURRIER_MOVEMENT_PRIMARY;
    public static final UniqueKey<VoyageToCurrierMovementRecord> KEY_VOYAGE_TO_CURRIER_MOVEMENT_SCHEDULE_IDX_1 = UniqueKeys0.KEY_VOYAGE_TO_CURRIER_MOVEMENT_SCHEDULE_IDX_1;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CargoRecord, Integer> IDENTITY_CARGO = Internal.createIdentity(JCargo.CARGO, JCargo.CARGO.ID);
        public static Identity<CargoToLegRecord, Integer> IDENTITY_CARGO_TO_LEG = Internal.createIdentity(JCargoToLeg.CARGO_TO_LEG, JCargoToLeg.CARGO_TO_LEG.ID);
        public static Identity<CurrierMovementRecord, Integer> IDENTITY_CURRIER_MOVEMENT = Internal.createIdentity(JCurrierMovement.CURRIER_MOVEMENT, JCurrierMovement.CURRIER_MOVEMENT.ID);
        public static Identity<HandlingEventRecord, Integer> IDENTITY_HANDLING_EVENT = Internal.createIdentity(JHandlingEvent.HANDLING_EVENT, JHandlingEvent.HANDLING_EVENT.ID);
        public static Identity<ItineraryRecord, Integer> IDENTITY_ITINERARY = Internal.createIdentity(JItinerary.ITINERARY, JItinerary.ITINERARY.ID);
        public static Identity<LegRecord, Integer> IDENTITY_LEG = Internal.createIdentity(JLeg.LEG, JLeg.LEG.ID);
        public static Identity<LocationRecord, Integer> IDENTITY_LOCATION = Internal.createIdentity(JLocation.LOCATION, JLocation.LOCATION.ID);
        public static Identity<VoyageRecord, Integer> IDENTITY_VOYAGE = Internal.createIdentity(JVoyage.VOYAGE, JVoyage.VOYAGE.ID);
        public static Identity<VoyageToCurrierMovementRecord, Integer> IDENTITY_VOYAGE_TO_CURRIER_MOVEMENT = Internal.createIdentity(JVoyageToCurrierMovement.VOYAGE_TO_CURRIER_MOVEMENT, JVoyageToCurrierMovement.VOYAGE_TO_CURRIER_MOVEMENT.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CargoRecord> KEY_CARGO_PRIMARY = Internal.createUniqueKey(JCargo.CARGO, "KEY_cargo_PRIMARY", JCargo.CARGO.ID);
        public static final UniqueKey<CargoRecord> KEY_CARGO_CARGO_IDX_1 = Internal.createUniqueKey(JCargo.CARGO, "KEY_cargo_cargo_idx_1", JCargo.CARGO.TRACKING_ID);
        public static final UniqueKey<CargoToLegRecord> KEY_CARGO_TO_LEG_PRIMARY = Internal.createUniqueKey(JCargoToLeg.CARGO_TO_LEG, "KEY_cargo_to_leg_PRIMARY", JCargoToLeg.CARGO_TO_LEG.ID);
        public static final UniqueKey<CargoToLegRecord> KEY_CARGO_TO_LEG_CARGGO_TO_LEG_INDEX_1 = Internal.createUniqueKey(JCargoToLeg.CARGO_TO_LEG, "KEY_cargo_to_leg_carggo_to_leg_index_1", JCargoToLeg.CARGO_TO_LEG.CARGO_ID, JCargoToLeg.CARGO_TO_LEG.LEG_ID);
        public static final UniqueKey<CurrierMovementRecord> KEY_CURRIER_MOVEMENT_PRIMARY = Internal.createUniqueKey(JCurrierMovement.CURRIER_MOVEMENT, "KEY_currier_movement_PRIMARY", JCurrierMovement.CURRIER_MOVEMENT.ID);
        public static final UniqueKey<HandlingEventRecord> KEY_HANDLING_EVENT_PRIMARY = Internal.createUniqueKey(JHandlingEvent.HANDLING_EVENT, "KEY_handling_event_PRIMARY", JHandlingEvent.HANDLING_EVENT.ID);
        public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_PRIMARY = Internal.createUniqueKey(JItinerary.ITINERARY, "KEY_itinerary_PRIMARY", JItinerary.ITINERARY.ID);
        public static final UniqueKey<ItineraryRecord> KEY_ITINERARY_ITINERARY_IDX_1 = Internal.createUniqueKey(JItinerary.ITINERARY, "KEY_itinerary_itinerary_idx_1", JItinerary.ITINERARY.CARGO_ID, JItinerary.ITINERARY.LEG_ID);
        public static final UniqueKey<LegRecord> KEY_LEG_PRIMARY = Internal.createUniqueKey(JLeg.LEG, "KEY_leg_PRIMARY", JLeg.LEG.ID);
        public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = Internal.createUniqueKey(JLocation.LOCATION, "KEY_location_PRIMARY", JLocation.LOCATION.ID);
        public static final UniqueKey<VoyageRecord> KEY_VOYAGE_PRIMARY = Internal.createUniqueKey(JVoyage.VOYAGE, "KEY_voyage_PRIMARY", JVoyage.VOYAGE.ID);
        public static final UniqueKey<VoyageToCurrierMovementRecord> KEY_VOYAGE_TO_CURRIER_MOVEMENT_PRIMARY = Internal.createUniqueKey(JVoyageToCurrierMovement.VOYAGE_TO_CURRIER_MOVEMENT, "KEY_voyage_to_currier_movement_PRIMARY", JVoyageToCurrierMovement.VOYAGE_TO_CURRIER_MOVEMENT.ID);
        public static final UniqueKey<VoyageToCurrierMovementRecord> KEY_VOYAGE_TO_CURRIER_MOVEMENT_SCHEDULE_IDX_1 = Internal.createUniqueKey(JVoyageToCurrierMovement.VOYAGE_TO_CURRIER_MOVEMENT, "KEY_voyage_to_currier_movement_schedule_idx_1", JVoyageToCurrierMovement.VOYAGE_TO_CURRIER_MOVEMENT.VOYAGE_ID, JVoyageToCurrierMovement.VOYAGE_TO_CURRIER_MOVEMENT.CURRIER_MOVEMENT_ID);
    }
}
